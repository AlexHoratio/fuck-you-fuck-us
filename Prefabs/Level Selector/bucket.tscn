[gd_scene load_steps=9 format=2]

[ext_resource path="res://Prefabs/Level Selector/bucket.gd" type="Script" id=1]
[ext_resource path="res://Graphics/Level Selector/Buckets/bucket1.png" type="Texture" id=2]
[ext_resource path="res://Scripts/Environment/bucket_shadow.gd" type="Script" id=3]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
render_mode unshaded;

uniform int intensity : hint_range(0,200); 
uniform float precision : hint_range(0,0.02);
uniform vec4 outline_color : hint_color;

varying vec2 o;
varying vec2 f;

void vertex()
{
	o = VERTEX;
	vec2 uv = (UV - 0.5);
	VERTEX += uv * float(intensity);
	f = VERTEX;
}

void fragment()
{
	ivec2 t = textureSize(TEXTURE, 0);
	vec2 regular_uv;
	regular_uv.x = UV.x + (f.x - o.x)/float(t.x);
	regular_uv.y = UV.y + (f.y - o.y)/float(t.y);
	
	vec4 regular_color = texture(TEXTURE, regular_uv);
	if((regular_uv.x < 0.0 || regular_uv.x > 1.0) || (regular_uv.y < 0.0 || regular_uv.y > 1.0) || regular_color.a <=0.25){
		regular_color = vec4(0.0); 
	}
	
	vec2 ps = TEXTURE_PIXEL_SIZE * float(intensity) * precision;
	
	vec4 final_color = regular_color;
	if (regular_color.a <= 0.0)
	{
		for(int x = -1; x <= 1; x += 1){
			for(int y = -1; y <= 1; y += 1){
				//Get the X and Y offset from this
				if (x==0 && y==0)
					continue;
					
				vec2 outline_uv = regular_uv + vec2(float(x) * ps.x, float(y) * ps.y); 
				
				//Sample here, if we are out of bounds then fail
				vec4 outline_sample = texture(TEXTURE, outline_uv);
				if((outline_uv.x < 0.0 || outline_uv.x > 1.0) || (outline_uv.y < 0.0 || outline_uv.y > 1.0)){
					//We aren't a real color
					outline_sample = vec4(0);
				}
				
				//Is our sample empty? Is there something nearby?
				if(outline_sample.a > final_color.a){
					final_color = outline_color;
				}
			}
		}
	}
	COLOR = final_color; 
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/intensity = 40
shader_param/precision = 0.02
shader_param/outline_color = null

[sub_resource type="RectangleShape2D" id=3]
extents = Vector2( 43, 24 )

[sub_resource type="RectangleShape2D" id=4]
extents = Vector2( 6, 50 )

[sub_resource type="RectangleShape2D" id=5]
extents = Vector2( 50, 6 )

[node name="bucket" type="Area2D"]
position = Vector2( 6, -60 )
script = ExtResource( 1 )

[node name="Sprite" type="Sprite" parent="."]
material = SubResource( 2 )
position = Vector2( -8, 66 )
scale = Vector2( 2, 2 )
texture = ExtResource( 2 )
script = ExtResource( 3 )

[node name="shadow" type="Sprite" parent="Sprite"]
show_behind_parent = true
texture = ExtResource( 2 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2( -8, 86 )
shape = SubResource( 3 )

[node name="walls" type="StaticBody2D" parent="."]

[node name="CollisionShape2D2" type="CollisionShape2D" parent="walls"]
position = Vector2( 39, 68 )
shape = SubResource( 4 )

[node name="CollisionShape2D3" type="CollisionShape2D" parent="walls"]
position = Vector2( -57, 66 )
shape = SubResource( 4 )

[node name="CollisionShape2D4" type="CollisionShape2D" parent="walls"]
position = Vector2( -5, 116 )
shape = SubResource( 5 )
[connection signal="body_entered" from="." to="." method="_on_bucket_body_entered"]
